import pandas


def vivesti_stolbec_faila(path, extension, stolbec):
    """Функция для вывода одного или нескольких столбцов из файла Excel в "path" нужно прописать путь до файла без
    расширения. Пример - ('C:/Users/USER/Desktop/1') в "extension" нужно прописать расширение файла. Пример - ('.xls)
    в "stolbec" нужно прописать необходимые столбцы. Пример "A, C, E:J" либо можно написать наименования столбцов (
    "company", "rank", "revenues") """
    file = path + extension
    data = pandas.read_excel(file, usecols=stolbec)
    return data


help(vivesti_stolbec_faila) # Функция справки python используется для отображения документации модулей, функций,
# классов, ключевых слов и т. Д.

df = vivesti_stolbec_faila(r'C:/Users/USER/Desktop/1', '.xls',
                           'A, D')  # пример "A, C, E:J" либо можно написать наименования столбцов ("company",
# "rank", "revenues")
# data = pandas.read_excel(file(), index_col="col1", columns=['col2']) # можно выбрать индексируеую колонку
print("\n--- список всех столбцов в вытащеном файле ---\n",
      df.columns.tolist())  # - показать листы в данном примере список будет иметь 2 элемента - [0,1] - эти
# элементы содержат заголовки столбцов

print("\n--- изначально вытащеный датафрейм ---\n", df)

new_order = [1, 0]  # - присвоить переменной new_order писок со значениями элеменотов 0, 1
df = df[df.columns[new_order]]  # - присвоить списку дата фрейма порядок элементов переменной new_order
print("\n--- датафрейм с изменеными столбцами ---\n", df)  # - показать новый порядок дата фрейма

print("\n---------------- все что идет ниже - эквивалентно записи выше ------------------------\n")

df = vivesti_stolbec_faila(r'C:/Users/USER/Desktop/1', '.xls',
                           'A, D')

print(df)   # - показать то что вытащили из файла

cols = list(df.columns)    # - присвоить переменной колс список датафрейма (который содержит заголовки столбцов)

cols[1], cols[0] = cols[0], cols[1]     # - меняем местами а и д
print("--------------------------------------------1")

print(df[cols])  # - отобразить заголовок значения списка

#print("--------------------------------------------")
#print(df) # - отобразить конечный дата фрейм

# df.to_excel(r'C:/Users/USER/Desktop/3.xls')   # записать в файл
